html
  head

  body(style='margin: 0')
    div(id='log' style='width: 100%; height: 100%; position: absolute; top: 0; background-color: #fff; z-index: 10')
    div(id='map' style='width: 100%; height: 100%; position: absolute; top: 0')

    script(src='../js/lib/framework7.js', type='text/javascript')
    script(src='http://api.map.baidu.com/api?v=2.0&ak=ZUONbpqGBsYGXNIYHicvbAbM', type='text/javascript')
    script(type='text/javascript').
      var map = new BMap.Map('map');
      map.centerAndZoom('上海');
      map.enableScrollWheelZoom(true);

      var $ = Dom7;

      var routeNames = ['森林公园', '人民广场', '陆家嘴', '长风公园',
        '复旦大学', '上海交通大学闵行校区', '中山公园', '世纪大道'];
      var geo = new BMap.Geocoder();

      var locations = [];
      for (var i = 0, len = routeNames.length; i < len; ++i) {
        (function(id) {
          var pos = '上海' + routeNames[id];
          geo.getPoint(pos, function(point) {
            locations.push({
              lat: point.lat,
              lng: point.lng
            });
            if (locations.length === len) {
              var result = meet(5);
              $('#log').html(JSON.stringify(result));
              console.log(result);
            }
          });
        })(i);
      }

      function meet(nLevel) {
        var generations = [];
        var id = 0;
        for (var i = 0; i < nLevel; ++i) {
          var generation = [];
          var n = (i + 2) * (i + 2) * 2 - 2 * i + 2;
          for (var j = 0; j < n; ++j) {
            var pid = Math.floor(Math.random() * (routeNames.length - 1));
            var lastGen = generations[generations.length - 1];
            var parentCnt = generations.length === 0 ? 0 : lastGen.length;
            var parent = parentCnt === 0 ? null : Math.floor(
                Math.random() * (parentCnt - 1));
            generation.push({
              id: id,
              lng: locations[pid].lng + Math.random() * 0.1 - 0.05,
              lat: locations[pid].lat + Math.random() * 0.1 - 0.05,
              parent: parent
            });
            ++id;
          }
          generations.push(generation);
        }
        return generations;
      }
